@use 'sass:selector';
@use '../abstracts/' as a;

.main {
  text-align: center;
  padding: 1.5rem;
  display: grid;
  justify-items: center;
  grid-template-rows: max-content 1fr;
  gap: 5rem;
}

.scores {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 3rem;
}

.game {
  display: grid;
  place-items: center;
}

.scores {
  font-size: var(--fnt-sz-scores-text);
  display: grid;
  align-items: center;
  justify-items: center;
  grid-template-columns: 1fr max-content;
  grid-template-areas: 'p1name p1score' 'p2name p2score';
  @include a.breakpoint(md, min) {
    grid-template-columns: 1fr repeat(2, max-content) 1fr;
    grid-template-areas: 'p1name p1score p2score p2name';
  }
  &__player-name {
    font-weight: var(--fnt-wt-700);
  }
  &__score {
    display: grid;
    place-items: center;
    background: var(--neu-bg-default);
    box-shadow: var(--neu-shadow-default);
    width: 4.5rem;
    aspect-ratio: 1;
    border-radius: 1rem;
    @include a.breakpoint(md, min) {
      width: 6rem;
    }
  }
}
#p1nameDisplay {
  grid-area: p1name;
  justify-self: end;
}
#p2nameDisplay {
  grid-area: p2name;
  justify-self: start;
}
#p1score {
  grid-area: p1score;
}
#p2score {
  grid-area: p2score;
}

.game__board {
  display: grid;
  grid-template-columns: repeat(3, auto);
  justify-items: center;
  align-items: center;
  gap: 2rem;
  border-radius: 2rem;
  @include a.breakpoint(375, max) {
    border-radius: 1rem;
  }

  &-cell {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--board-cell-size);
    aspect-ratio: 1;
    position: relative;
    cursor: pointer;
  }
}

.symbolO {
  @at-root .game__board-cell#{&}::before,
    .game__board#{&} .game__board-cell:not(.symbolX):not(&):hover::before {
    content: '';
    border-radius: 100rem;
    position: absolute;
    height: calc(var(--symbol-size) * 0.7);
    aspect-ratio: 1;
  }

  @at-root .game__board-cell#{&}::before {
    box-shadow: 0 0 0 0.8rem var(--clr-dark-grey);
  }

  @at-root .game__board#{&}
      .game__board-cell:not(.symbolX):not(&):hover::before {
    box-shadow: 0 0 0 0.8rem var(--clr-medium-grey);
  }
}

.symbolX {
  @at-root .game__board-cell#{&}::before,
    .game__board-cell#{&}::after,
    .game__board#{&} .game__board-cell:not(&):not(.symbolO):hover::before,
    .game__board#{&} .game__board-cell:not(&):not(.symbolO):hover::after {
    content: '';
    height: var(--symbol-size);
    width: calc(var(--symbol-size) * 0.1);
    position: absolute;
  }
  @at-root .game__board-cell#{&}::before,
    .game__board#{&} .game__board-cell:not(&):not(.symbolO):hover::before {
    transform: rotate(45deg);
  }
  @at-root .game__board-cell#{&}::after,
    .game__board#{&} .game__board-cell:not(&):not(.symbolO):hover::after {
    transform: rotate(-45deg);
  }
  @at-root .game__board-cell#{&}::before,
    .game__board-cell#{&}::after {
    background: var(--clr-dark-grey);
  }
  @at-root .game__board#{&}
      .game__board-cell:not(&):not(.symbolO):hover::before,
    .game__board#{&} .game__board-cell:not(&):not(.symbolO):hover::after {
    background: var(--clr-medium-grey);
  }
}

.symbolX,
.symbolO {
  cursor: not-allowed;
}

.symbolX:not(.game__board),
.symbolO:not(.game__board) {
  background: var(--neu-bg-default);
  box-shadow: var(--neu-shadow-default);
}
